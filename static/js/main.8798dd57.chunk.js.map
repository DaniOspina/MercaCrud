{"version":3,"sources":["components/footer/Footer.jsx","components/userview/User.jsx","components/products/Products.jsx","pages/user/Global.jsx","pages/admin/Admin.jsx","components/navbar/NavBar.jsx","pages/login/Login.jsx","routes/Routes.jsx","App.js","index.js"],"names":["Footer","className","data","id","Producto","Provedor","Cantidad","Fecha","Descripcion","Categoria","User","state","modalActualizar","modalInsertar","form","mostrarModalActualizar","dato","setState","cerrarModalActualizar","mostrarModalInsertar","cerrarModalInsertar","editar","contador","arreglo","map","registro","eliminar","window","confirm","splice","insertar","valorNuevo","length","lista","push","handleChange","e","target","name","value","Container","type","Table","this","Modal","isOpen","ModalHeader","ModalBody","FormGroup","readOnly","onChange","ModalFooter","Button","color","onClick","React","Component","Global","useState","setData","search","setSearch","peticionGet","a","axios","get","then","response","products","useEffect","filteredProducts","filter","pro_name","toLowerCase","includes","placeholder","pro_provider","pro_existences","pro_date","pro_description","pro_category","cookies","Cookies","Admin","logOut","remove","path","location","href","console","log","NavBar","baseUrl","Login","username","password","logIn","params","md5","reply","set","first_lastname","second_lastname","alert","catch","error","Routes","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8798dd57.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../footer/footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n        <footer>\r\n            <p className=\"footer\">© Copyright 2021 – Todos los derechos reservados – Desarrollado por SuperTeam</p>\r\n        </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\";\r\nimport \"./user.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n    Table,\r\n    Button,\r\n    Container,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    FormGroup,\r\n    ModalFooter,\r\n} from \"reactstrap\";\r\nimport Footer from \"../footer/Footer\";\r\n\r\nconst data = [\r\n    {\r\n        id: 1,\r\n        Producto: \"sachichas\",\r\n        Provedor: \"ranchera\",\r\n        Cantidad: \"23\",\r\n        Fecha: \"10/06/2021\",\r\n        Descripcion: \"comida embutida \",\r\n        Categoria: \"embutido\",\r\n    },\r\n    {\r\n        id: 2,\r\n        Producto: \"chorizo\",\r\n        Provedor: \"ranchera\",\r\n        Cantidad: \"23\",\r\n        Fecha: \"10/06/2021\",\r\n        Descripcion: \"comida embutida \",\r\n        Categoria: \"embutido\",\r\n    },\r\n    {\r\n        id: 3,\r\n        Producto: \"hamburguesa\",\r\n        Provedor: \"ranchera\",\r\n        Cantidad: \"23\",\r\n        Fecha: \"10/06/2021\",\r\n        Descripcion: \"comida embutida \",\r\n        Categoria: \"embutido\",\r\n    },\r\n    {\r\n        id: 4,\r\n        Producto: \"mortadela\",\r\n        Provedor: \"ranchera\",\r\n        Cantidad: \"23\",\r\n        Fecha: \"10/06/2021\",\r\n        Descripcion: \"comida embutida \",\r\n        Categoria: \"embutido\",\r\n    },\r\n    {\r\n        id: 5,\r\n        Producto: \"jamon\",\r\n        Cantidad: \"23\",\r\n        Provedor: \"ranchera\",\r\n        Fecha: \"10/06/2021\",\r\n        Descripcion: \"comida embutida \",\r\n        Categoria: \"embutido\",\r\n    },\r\n    {\r\n        id: 6,\r\n        Producto: \"jamon\",\r\n        Provedor: \"ranchera\",\r\n        Cantidad: \"23\",\r\n        Fecha: \"10/06/2021\",\r\n        Descripcion: \"comida embutida \",\r\n        Categoria: \"embutido!\",\r\n    },\r\n];\r\n\r\nclass User extends React.Component {\r\n    state = {\r\n        data: data,\r\n        modalActualizar: false,\r\n        modalInsertar: false,\r\n        form: {\r\n            id: \"\",\r\n            Producto: \"\",\r\n            Provedor: \"\",\r\n            Fecha: \"\",\r\n            Cantidad: \"\",\r\n            Descripcion: \"\",\r\n            Categoria: \"\",\r\n        },\r\n    };\r\n\r\n    mostrarModalActualizar = (dato) => {\r\n        this.setState({\r\n            form: dato,\r\n            modalActualizar: true,\r\n        });\r\n    };\r\n\r\n    cerrarModalActualizar = () => {\r\n        this.setState({ modalActualizar: false });\r\n    };\r\n\r\n    mostrarModalInsertar = () => {\r\n        this.setState({\r\n            modalInsertar: true,\r\n        });\r\n    };\r\n\r\n    cerrarModalInsertar = () => {\r\n        this.setState({ modalInsertar: false });\r\n    };\r\n\r\n    editar = (dato) => {\r\n        var contador = 0;\r\n        var arreglo = this.state.data;\r\n        arreglo.map((registro) => {\r\n            if (dato.id == registro.id) {\r\n                arreglo[contador].Producto = dato.Producto;\r\n                arreglo[contador].Provedor = dato.Provedor;\r\n                arreglo[contador].Cantidad = dato.Cantidad;\r\n                arreglo[contador].Fecha = dato.Fecha;\r\n                arreglo[contador].Descripcion = dato.Descripcion;\r\n                arreglo[contador].Categoria = dato.Categoria;\r\n            }\r\n            contador++;\r\n        });\r\n        this.setState({ data: arreglo, modalActualizar: false });\r\n    };\r\n\r\n    eliminar = (dato) => {\r\n        var opcion = window.confirm(\r\n            \"Estás Seguro que deseas Eliminar el elemento \" + dato.id\r\n        );\r\n        if (opcion == true) {\r\n            var contador = 0;\r\n            var arreglo = this.state.data;\r\n            arreglo.map((registro) => {\r\n                if (dato.id == registro.id) {\r\n                    arreglo.splice(contador, 1);\r\n                }\r\n                contador++;\r\n            });\r\n            this.setState({ data: arreglo, modalActualizar: false });\r\n        }\r\n    };\r\n\r\n    insertar = () => {\r\n        var valorNuevo = { ...this.state.form };\r\n        valorNuevo.id = this.state.data.length + 1;\r\n        var lista = this.state.data;\r\n        lista.push(valorNuevo);\r\n        this.setState({ modalInsertar: false, data: lista });\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <header>\r\n                    <h1>Mercatodo</h1>\r\n\r\n                </header>\r\n                <div className=\"all\">\r\n                    <Container>\r\n                        <div className=\"buscador\">\r\n                            <br />\r\n                            <p>Bienvenido Beto encuentra lo que necesitas</p>\r\n                            \r\n                            <input className=\"Search\" type=\"search\"></input>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <Table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Producto</th>\r\n                                    <th>Provedor</th>\r\n                                    <th>Cantidad</th>\r\n                                    <th>Fecha</th>\r\n                                    <th>Descripcion</th>\r\n                                    <th>Catergoria</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {this.state.data.map((dato) => (\r\n                                    <tr key={dato.id}>\r\n                                        <td>{dato.id}</td>\r\n                                        <td>{dato.Producto}</td>\r\n                                        <td>{dato.Provedor}</td>\r\n                                        <td>{dato.Cantidad}</td>\r\n                                        <td>{dato.Fecha}</td>\r\n                                        <td>{dato.Descripcion}</td>\r\n                                        <td>{dato.Categoria}</td>\r\n                                        \r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Container>\r\n\r\n                    <Modal isOpen={this.state.modalActualizar}>\r\n                        <ModalHeader>\r\n                            <div>\r\n                                <h3>Editar Registro</h3>\r\n                            </div>\r\n                        </ModalHeader>\r\n\r\n                        <ModalBody>\r\n                            <FormGroup>\r\n                                <label>Id:</label>\r\n\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    readOnly\r\n                                    type=\"text\"\r\n                                    value={this.state.form.id}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <label>Producto:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"producto\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.form.Producto}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <label>Provedor:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Provedor\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.form.Provedor}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Categotia:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Categoria\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.form.Categoria}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Producto:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Producto\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.form.Categoria}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Provedor:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Provedor\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.form.Categoria}\r\n                                />\r\n                            </FormGroup>\r\n                        </ModalBody>\r\n\r\n                        <ModalFooter>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={() => this.editar(this.state.form)}\r\n                            >\r\n                                Editar\r\n                            </Button>\r\n                            <Button\r\n                                color=\"danger\"\r\n                                onClick={() => this.cerrarModalActualizar()}\r\n                            >\r\n                                Cancelar\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                    <Modal isOpen={this.state.modalInsertar}>\r\n                        <ModalHeader>\r\n                            <div color=\"primary\">\r\n                                <h3>Insertar Producto</h3>\r\n                            </div>\r\n                        </ModalHeader>\r\n\r\n                        <ModalBody>\r\n                            <FormGroup>\r\n                                <label>Id:</label>\r\n\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    readOnly\r\n                                    type=\"text\"\r\n                                    value={this.state.data.length + 1}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <label>Producto:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Producto\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <label>Provedor:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Provedor\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Cantidad:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Cantidad\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Fecha:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Fecha\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Descripcion:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Fecha\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Categoria:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Fecha\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                        </ModalBody>\r\n\r\n                        <ModalFooter>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={() => this.insertar()}\r\n                            >\r\n                                Insertar\r\n                            </Button>\r\n                            <Button\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => this.cerrarModalInsertar()}\r\n                            >\r\n                                Cancelar\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default User;","import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport Global from '../../'\r\nimport \"./products.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n    Table,\r\n    Button,\r\n    Container,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    FormGroup,\r\n    ModalFooter,\r\n} from \"reactstrap\";\r\nimport Footer from \"../footer/Footer\";\r\n\r\n/* const data = [\r\n    {\r\n        \"id\": 1,\r\n        \"pro_name\": \"JABON DETERGENTE LIQUIDO\",\r\n        \"pro_provider\": \"COCO VARELA\",\r\n        \"pro_existences\": 16,\r\n        \"pro_date\": \"2017-10-25\",\r\n        \"pro_description\": \"2 X 3 LITROS PARA PRENDAS DELICADAS Detergente desarrollado para el lavado de prendas delicadas\",\r\n        \"pro_category\": \"Elementos de Aseo\"\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"pro_name\": \"Detergente polvo jabón rey\",\r\n        \"pro_provider\": \"Dersa\",\r\n        \"pro_existences\": 5,\r\n        \"pro_date\": \"2019-03-15\",\r\n        \"pro_description\": \"Disfruta del mejor aroma del Detergente Dersa polvo bicarbonato + jabon rey x 6000g\",\r\n        \"pro_category\": \"Elementos de Aseo\"\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"pro_name\": \"Jabon liquido vainilla coco\",\r\n        \"pro_provider\": \"Bacterion\",\r\n        \"pro_existences\": 15,\r\n        \"pro_date\": \"2019-10-20\",\r\n        \"pro_description\": \"Lleva tu Jabon liquido Bacterion vainilla coco x1000 ml y protegete de las bacterias durante el dia\",\r\n        \"pro_category\": \"Elementos de Aseo\"\r\n      }\r\n]; */\r\n\r\n\r\nclass Products extends Component {\r\n   state = {\r\n        data: [],\r\n        status: false,\r\n        modalActualizar: false,\r\n        modalInsertar: false,\r\n        form: {\r\n            id: \"\",\r\n            pro_name: \"\",\r\n            pro_provider: \"\",\r\n            pro_existences: \"\",\r\n            pro_date: \"\",\r\n            pro_description: \"\",\r\n            pro_category: \"\",\r\n        },\r\n    };\r\n    \r\n\r\n    getProducts = () => {\r\n        var url = 'https://apimercatodo.herokuapp.com/api/products/';\r\n        var request ='/products';\r\n        axios.get(url + request).then(res => {\r\n            this.setState({\r\n                data: res.data\r\n                , status: true\r\n            });\r\n        });\r\n    }\r\n\r\n     componentDidMount =() => {\r\n        this.getProducts();\r\n    }\r\n\r\n    mostrarModalActualizar = (dato) => {\r\n        this.setState({\r\n            form: dato,\r\n            modalActualizar: true,\r\n        });\r\n    };\r\n\r\n    cerrarModalActualizar = () => {\r\n        this.setState({ modalActualizar: false });\r\n    };\r\n\r\n    mostrarModalInsertar = () => {\r\n        this.setState({\r\n            modalInsertar: true,\r\n        });\r\n    };\r\n\r\n    cerrarModalInsertar = () => {\r\n        this.setState({ modalInsertar: false });\r\n    };\r\n\r\n    editar = (dato) => {\r\n        var contador = 0;\r\n        var arreglo = this.state.data;\r\n        arreglo.map((registro) => {\r\n            if (dato.id == registro.id) {\r\n                arreglo[contador].pro_name = dato.pro_name;\r\n                arreglo[contador].pro_provider = dato.pro_provider;\r\n                arreglo[contador].pro_existences = dato.pro_existences;\r\n                arreglo[contador].pro_date = dato.pro_date;\r\n                arreglo[contador].pro_description = dato.pro_description;\r\n                arreglo[contador].pro_category = dato.pro_category;\r\n            }\r\n            contador++;\r\n        });\r\n        this.setState({ data: arreglo, modalActualizar: false });\r\n    };\r\n\r\n    eliminar = (dato) => {\r\n        var opcion = window.confirm(\r\n            \"Estás Seguro que deseas Eliminar el elemento \" + dato.id\r\n        );\r\n        if (opcion == true) {\r\n            var contador = 0;\r\n            var arreglo = this.state.data;\r\n            arreglo.map((registro) => {\r\n                if (dato.id == registro.id) {\r\n                    arreglo.splice(contador, 1);\r\n                }\r\n                contador++;\r\n            });\r\n            this.setState({ data: arreglo, modalActualizar: false });\r\n        }\r\n    };\r\n\r\n    insertar = () => {\r\n        var valorNuevo = { ...this.state.form };\r\n        valorNuevo.id = this.state.data.length + 1;\r\n        var lista = this.state.data;\r\n        lista.push(valorNuevo);\r\n        this.setState({ modalInsertar: false, data: lista });\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <header>\r\n                    <h1>Mercatodo</h1>\r\n                </header>\r\n                <div className=\"all\">\r\n                    <Container>\r\n                        <div className=\"buscador\">\r\n                            <br />\r\n                            <p>Bienvenido Beto encuentra lo que necesitas</p>\r\n                            <Button\r\n                                color=\"success\"\r\n                                onClick={() => this.mostrarModalInsertar()}\r\n                            >\r\n                                +Agregar producto\r\n                            </Button>\r\n                            <input className=\"Search\" type=\"search\"></input>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <Table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Producto</th>\r\n                                    <th>Provedor</th>\r\n                                    <th>Cantidad</th>\r\n                                    <th>Fecha</th>\r\n                                    <th>Descripcion</th>\r\n                                    <th>Catergoria</th>\r\n                                    <th>Editar</th>\r\n                                    <th>Eliminar</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {this.state.data.map((dato) => (\r\n                                    <tr key={dato.id}>\r\n                                        <td>{dato.id}</td>\r\n                                        <td>{dato.pro_name}</td>\r\n                                        <td>{dato.pro_provider}</td>\r\n                                        <td>{dato.pro_existences}</td>\r\n                                        <td>{dato.pro_date}</td>\r\n                                        <td>{dato.pro_description}</td>\r\n                                        <td>{dato.pro_category}</td>\r\n                                        <td>\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                onClick={() =>\r\n                                                    this.mostrarModalActualizar(\r\n                                                        dato\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                Editar\r\n                                            </Button>{\" \"}\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button\r\n                                                color=\"danger\"\r\n                                                onClick={() =>\r\n                                                    this.eliminar(dato)\r\n                                                }\r\n                                            >\r\n                                                Eliminar\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Container>\r\n\r\n                    <Modal isOpen={this.state.modalActualizar}>\r\n                        <ModalHeader>\r\n                            <div>\r\n                                <h3>Editar Registro</h3>\r\n                            </div>\r\n                        </ModalHeader>\r\n\r\n                        <ModalBody>\r\n                            <FormGroup>\r\n                                <label>Id:</label>\r\n\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    readOnly\r\n                                    type=\"text\"\r\n                                    value={this.state.form.id}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <label>Producto:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"producto\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.form.Producto}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <label>Provedor:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Provedor\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.form.Provedor}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Categotia:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Categoria\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.form.Categoria}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Producto:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Producto\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.form.Categoria}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Provedor:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Provedor\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.form.Categoria}\r\n                                />\r\n                            </FormGroup>\r\n                        </ModalBody>\r\n\r\n                        <ModalFooter>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={() => this.editar(this.state.form)}\r\n                            >\r\n                                Editar\r\n                            </Button>\r\n                            <Button\r\n                                color=\"danger\"\r\n                                onClick={() => this.cerrarModalActualizar()}\r\n                            >\r\n                                Cancelar\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                    <Modal isOpen={this.state.modalInsertar}>\r\n                        <ModalHeader>\r\n                            <div color=\"primary\">\r\n                                <h3>Insertar Producto</h3>\r\n                            </div>\r\n                        </ModalHeader>\r\n\r\n                        <ModalBody>\r\n                            <FormGroup>\r\n                                <label>Id:</label>\r\n\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    readOnly\r\n                                    type=\"text\"\r\n                                    value={this.state.data.length + 1}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <label>Producto:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Producto\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <label>Provedor:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Provedor\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Cantidad:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Cantidad\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Fecha:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Fecha\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Descripcion:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Fecha\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label>Categoria:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"Fecha\"\r\n                                    type=\"text\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                        </ModalBody>\r\n\r\n                        <ModalFooter>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={() => this.insertar()}\r\n                            >\r\n                                Insertar\r\n                            </Button>\r\n                            <Button\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => this.cerrarModalInsertar()}\r\n                            >\r\n                                Cancelar\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>  \r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default Products;","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport \"../../components/products/products.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n    Table,\r\n    Button,\r\n    Container,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    FormGroup,\r\n    ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nconst baseUrl='https://apimercatodo.herokuapp.com/api/products/'\r\n\r\n\r\nfunction Global() {\r\n\r\n  const [data, setData]=useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n \r\n  const peticionGet=async()=>{\r\n    await axios.get(baseUrl)\r\n    .then(response=>{\r\n      setData(response.data.products);\r\n    })\r\n  }\r\n  \r\n  useEffect(async()=>{\r\n    await peticionGet();\r\n  },[])\r\n\r\n  const filteredProducts = data.filter(dato => {\r\n        return dato.pro_name.toLowerCase().includes(search.toLowerCase())\r\n    }  )\r\n  \r\n return (\r\n           <>\r\n                <header>\r\n                    <h1>Mercatodo</h1>\r\n                </header>\r\n                <div className=\"all\">\r\n                    <Container>\r\n                        <div className=\"buscador\">\r\n                            <br />\r\n                            <p>Bienvenido encuentra lo que necesitas</p>\r\n                            <Button\r\n                                color=\"success\"\r\n                                // onClick={() => this.mostrarModalInsertar()}\r\n                            >\r\n                                +Agregar producto\r\n                            </Button>\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"Buscar\"\r\n                              onChange={(e) => setSearch(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <br />\r\n                        <Table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Producto</th>\r\n                                    <th>Provedor</th>\r\n                                    <th>Cantidad</th>\r\n                                    <th>Fecha</th>\r\n                                    <th>Descripcion</th>\r\n                                    <th>Catergoria</th>\r\n                                    <th>Editar</th>\r\n                                    <th>Eliminar</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {filteredProducts.map(dato =>(\r\n                                    <tr key={dato.id}>\r\n                                        <td>{dato.id}</td>\r\n                                        <td>{dato.pro_name}</td>\r\n                                        <td>{dato.pro_provider}</td>\r\n                                        <td>{dato.pro_existences}</td>\r\n                                        <td>{dato.pro_date}</td>\r\n                                        <td>{dato.pro_description}</td>\r\n                                        <td>{dato.pro_category}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Container>\r\n                </div>  \r\n            </>\r\n )\r\n}\r\n\r\nexport default Global;","import React, { Component } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport Products from '../../components/products/Products'\r\nimport Global from '../user/Global'\r\n\r\nconst cookies = new Cookies();\r\n\r\nclass Admin extends Component {\r\n\r\n    //borrar las variables al cerrar sesión\r\n    logOut=()=>{\r\n        cookies.remove('id', {path: \"/\"});\r\n        cookies.remove('first_lastname', {path: \"/\"});\r\n        cookies.remove('second_lastname', {path: \"/\"});\r\n        cookies.remove('name', {path: \"/\"});\r\n        cookies.remove('username', {path: \"/\"});\r\n        window.location.href='./';\r\n    }\r\n    \r\n    //si no existe username redirecciona a login\r\n    componentDidMount() {\r\n        if(!cookies.get('username')){\r\n            window.location.href=\"./\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('id: '+ cookies.get('id'));\r\n        console.log('first_lastname: '+cookies.get('first_lastname'));\r\n        console.log('second_lastname: '+cookies.get('second_lastname'));\r\n        console.log('name: '+cookies.get('name'));\r\n        console.log('username: '+cookies.get('username'));\r\n        return (\r\n            <div>\r\n                <Global/>\r\n                <button onClick={()=>this.logOut()}>Cerrar Sesión</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Admin;","import React from 'react';\r\nimport '../navbar/navbar.css';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <>\r\n           <div className=\"navbar\">\r\n            <h1 className=\"logo\">MERCATODO</h1>\r\n           </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React, {Component}from 'react';\r\nimport './login.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport md5 from 'md5';\r\nimport Cookies from 'universal-cookie';\r\nimport NavBar from '../../components/navbar/NavBar';\r\nimport Footer from '../../components/footer/Footer';\r\n\r\n//url para petición\r\nconst baseUrl=\"http://localhost:3001/usuarios\";\r\n\r\n//guardar la var inicio de sesión\r\nconst cookies = new Cookies();\r\n\r\nclass Login extends Component {\r\n    //ESTADO capturar lo que el usuario escribe en el input\r\n\r\n    state={\r\n        form:{\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    //METODO para guardar en el estado capturar los inputs\r\n    handleChange=async e=>{\r\n        await this.setState({\r\n            form:{\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n        console.log(this.state.form);\r\n    }\r\n\r\n    //login= peticion tipo get=consultar info \r\n    logIn=async()=>{\r\n        await axios.get(baseUrl, {params: {username: this.state.form.username, password: md5(this.state.form.password)}})\r\n        .then(response=>{\r\n            return response.data; //retornamos la data del api cuando el inicio de sesion es correcto\r\n        })\r\n        .then(response=>{  \r\n            if(response.length>0){  //usamos la data response length mayor a 0 y encuentra la data\r\n                var reply=response[0]; \r\n                cookies.set('id', reply.id, {path: \"/\"});\r\n                cookies.set('first_lastname', reply.first_lastname, {path: \"/\"});\r\n                cookies.set('second_lastname', reply.second_lastname, {path: \"/\"});\r\n                cookies.set('name', reply.name, {path: \"/\"});\r\n                cookies.set('username', reply.username, {path: \"/\"});\r\n                alert(`Bienvenido ${reply.name} ${reply.first_lastname}`);\r\n                window.location.href=\"./admin\";   //redirigir la pagina\r\n            }else{\r\n                window.location.href=\"./user\";   //redirigir la pagina\r\n            }\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n\r\n    }\r\n    //redirecciona a tabla de productos\r\n    componentDidMount() {\r\n        if(cookies.get('username')){\r\n            window.location.href=\"./admin\";\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n    <div className=\"master\">\r\n        <NavBar />\r\n        <div className=\"firstContainer\">\r\n            <div className=\"secondContainer\">\r\n            <div className=\"form-group\">\r\n                <label>Usuario: </label>\r\n                <br />\r\n                <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <label>Contraseña: </label>\r\n                <br />\r\n                <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <button className=\"btn btn-warning\" onClick={()=> this.logIn()}>Iniciar Sesión</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <Footer/>\r\n      </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\nimport User from '../components/userview/User';\r\nimport Admin from '../pages/admin/Admin';\r\nimport Login from '../pages/login/Login';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Login}/>\r\n            <Route exact path=\"/admin\" component={Admin}/>\r\n            <Route exact path=\"/user\" component={User}/>\r\n        </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import Routes from \"./routes/Routes\";\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Routes/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}